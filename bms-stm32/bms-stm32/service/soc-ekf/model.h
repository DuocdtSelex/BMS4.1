/*
 * model.h
 *
 *  Created on: Feb 1, 2021
 *      Author: Admin
 */
#if 0
#ifndef SERVICE_SOC_EKF_MODEL_H_
#define SERVICE_SOC_EKF_MODEL_H_

#define EKF_SOC_LUT_SIZE  201
#define EKF_OCV_LUT_SIZE  201
#define EKF_dOCV_LUT_SIZE 201

// initial parameter for battery model ESC
#define ETAParam   0.9929f  // etaParam Coulombic efficiency deg at each temperature (unitless)
#define QParam     16.0000f // QParam Capacity Q at each temperature [Ah]
#define GParam     61.7498f // GParam Hysteresis “gamma” parameter deg (unitless)
#define MParam     0.0443f  // MParam Hysteresis M parameter [V]
#define M0Param    0.0025f   // M0Param Hysteresis M0 parameter [V]
#define R0Param    0.112f   // R0Param Series resistance parameter R0 [deg]
#define RCParam    2.4107f  // RCParam The R–C time constant parameter RjCj [s]
#define RParam     0.0025f   // RParam Resistance Rj of the R–C parameter [ohm]

typedef struct L_t L;
typedef struct Ahat_t Ahat;
typedef struct Bhat_t Bhat;
typedef struct Chat_t Chat;
struct L_t{
	float L1;
	float L2;
	float L3;
};

struct Ahat_t{
	float Ahat_ir;
	float Ahat_hk;
	float Ahat_zk;
};

struct Bhat_t{
	float Bhat_ir;
	float Bhat_hk;
	float Bhat_zk;
	float B_hk2;
};
struct Chat_t{
	float Chat_ir;
	float Chat_hk;
	float Chat_zk;
};

static const float ocv_lut_values[EKF_OCV_LUT_SIZE]=
{
		67.1992,
		67.0034,
		66.8198,
		66.6476,
		66.4850,
		66.3321,
		66.1875,
		66.0503,
		65.9198,
		65.7957,
		65.6765,
		65.5619,
		65.4519,
		65.3451,
		65.2414,
		65.1406,
		65.0418,
		64.9452,
		64.8496,
		64.7555,
		64.6626,
		64.5703,
		64.4782,
		64.3865,
		64.2948,
		64.2031,
		64.1115,
		64.0194,
		63.9273,
		63.8344,
		63.7412,
		63.6476,
		63.5535,
		63.4586,
		63.3635,
		63.2679,
		63.1718,
		63.0752,
		62.9785,
		62.8812,
		62.7838,
		62.6862,
		62.5882,
		62.4904,
		62.3926,
		62.2948,
		62.1972,
		62.1000,
		62.0030,
		61.9063,
		61.8102,
		61.7148,
		61.6198,
		61.5258,
		61.4323,
		61.3399,
		61.2484,
		61.1578,
		61.0684,
		60.9801,
		60.8930,
		60.8073,
		60.7228,
		60.6396,
		60.5578,
		60.4775,
		60.3986,
		60.3212,
		60.2453,
		60.1711,
		60.0983,
		60.0271,
		59.9575,
		59.8895,
		59.8231,
		59.7581,
		59.6949,
		59.6331,
		59.5729,
		59.5142,
		59.4569,
		59.4012,
		59.3468,
		59.2939,
		59.2424,
		59.1921,
		59.1431,
		59.0954,
		59.0489,
		59.0035,
		58.9592,
		58.9159,
		58.8737,
		58.8323,
		58.7919,
		58.7522,
		58.7134,
		58.6752,
		58.6378,
		58.6009,
		58.5646,
		58.5288,
		58.4934,
		58.4584,
		58.4238,
		58.3895,
		58.3554,
		58.3216,
		58.2879,
		58.2543,
		58.2209,
		58.1875,
		58.1541,
		58.1207,
		58.0873,
		58.0538,
		58.0202,
		57.9866,
		57.9528,
		57.9190,
		57.8850,
		57.8509,
		57.8166,
		57.7822,
		57.7477,
		57.7131,
		57.6784,
		57.6435,
		57.6086,
		57.5737,
		57.5386,
		57.5036,
		57.4686,
		57.4336,
		57.3987,
		57.3638,
		57.3290,
		57.2944,
		57.2600,
		57.2257,
		57.1917,
		57.1579,
		57.1243,
		57.0910,
		57.0580,
		57.0253,
		56.9929,
		56.9608,
		56.9290,
		56.8974,
		56.8661,
		56.8351,
		56.8041,
		56.7734,
		56.7426,
		56.7119,
		56.6810,
		56.6499,
		56.6185,
		56.5866,
		56.5540,
		56.5206,
		56.4862,
		56.4505,
		56.4133,
		56.3744,
		56.3334,
		56.2900,
		56.2438,
		56.1944,
		56.1415,
		56.0845,
		56.0230,
		55.9564,
		55.8841,
		55.8055,
		55.7200,
		55.6267,
		55.5251,
		55.4141,
		55.2930,
		55.1608,
		55.0166,
		54.8592,
		54.6876,
		54.5005,
		54.2968,
		54.0751,
		53.8339,
		53.5719,
		53.2874,
		52.9788,
		52.6444,
		52.2823,
		51.8907,
		51.4675,
		51.0106,
		50.5178,
		49.9867,
		49.4150,
		48.8000
};

static const float soc_lut_values[EKF_SOC_LUT_SIZE]={
		1.0,
		0.995,
		0.990,
		0.985,
		0.980,
		0.975,
		0.970,
		0.965,
		0.960,
		0.955,
		0.950,
		0.945,
		0.940,
		0.935,
		0.930,
		0.925,
		0.920,
		0.915,
		0.910,
		0.905,
		0.900,
		0.895,
		0.890,
		0.885,
		0.880,
		0.875,
		0.870,
		0.865,
		0.860,
		0.855,
		0.850,
		0.845,
		0.840,
		0.835,
		0.830,
		0.825,
		0.820,
		0.815,
		0.810,
		0.805,
		0.800,
		0.795,
		0.790,
		0.785,
		0.780,
		0.775,
		0.770,
		0.765,
		0.760,
		0.755,
		0.750,
		0.745,
		0.740,
		0.735,
		0.730,
		0.725,
		0.720,
		0.715,
		0.710,
		0.705,
		0.700,
		0.695,
		0.690,
		0.685,
		0.680,
		0.675,
		0.670,
		0.665,
		0.660,
		0.655,
		0.650,
		0.645,
		0.640,
		0.635,
		0.630,
		0.625,
		0.620,
		0.615,
		0.610,
		0.605,
		0.600,
		0.595,
		0.590,
		0.585,
		0.580,
		0.575,
		0.570,
		0.565,
		0.560,
		0.555,
		0.550,
		0.545,
		0.540,
		0.535,
		0.530,
		0.525,
		0.520,
		0.515,
		0.510,
		0.505,
		0.500,
		0.495,
		0.490,
		0.485,
		0.480,
		0.475,
		0.470,
		0.465,
		0.460,
		0.455,
		0.450,
		0.445,
		0.440,
		0.435,
		0.430,
		0.425,
		0.420,
		0.415,
		0.410,
		0.405,
		0.400,
		0.395,
		0.390,
		0.385,
		0.380,
		0.375,
		0.370,
		0.365,
		0.360,
		0.355,
		0.350,
		0.345,
		0.340,
		0.335,
		0.330,
		0.325,
		0.320,
		0.315,
		0.310,
		0.305,
		0.300,
		0.295,
		0.290,
		0.285,
		0.280,
		0.275,
		0.270,
		0.265,
		0.260,
		0.255,
		0.250,
		0.245,
		0.240,
		0.235,
		0.230,
		0.225,
		0.220,
		0.215,
		0.210,
		0.205,
		0.200,
		0.195,
		0.190,
		0.185,
		0.180,
		0.175,
		0.170,
		0.165,
		0.160,
		0.155,
		0.150,
		0.145,
		0.140,
		0.135,
		0.130,
		0.125,
		0.120,
		0.115,
		0.110,
		0.105,
		0.100,
		0.095,
		0.090,
		0.085,
		0.080,
		0.075,
		0.070,
		0.065,
		0.060,
		0.055,
		0.050,
		0.045,
		0.040,
		0.035,
		0.030,
		0.025,
		0.020,
		0.015,
		0.010,
		0.005,
		0.000
};

static const float dOCV_LUT_TABLES[EKF_dOCV_LUT_SIZE]={
		40.495,
		37.924,
		35.573,
		33.435,
		31.493,
		29.738,
		28.153,
		26.729,
		25.461,
		24.328,
		23.326,
		22.447,
		21.677,
		21.010,
		20.436,
		19.948,
		19.542,
		19.203,
		18.931,
		18.717,
		18.555,
		18.440,
		18.364,
		18.325,
		18.317,
		18.336,
		18.377,
		18.434,
		18.508,
		18.593,
		18.686,
		18.784,
		18.883,
		18.983,
		19.082,
		19.174,
		19.261,
		19.340,
		19.409,
		19.468,
		19.514,
		19.548,
		19.567,
		19.573,
		19.561,
		19.536,
		19.495,
		19.436,
		19.363,
		19.273,
		19.166,
		19.044,
		18.907,
		18.752,
		18.585,
		18.402,
		18.206,
		17.995,
		17.773,
		17.538,
		17.293,
		17.037,
		16.770,
		16.496,
		16.213,
		15.923,
		15.626,
		15.325,
		15.018,
		14.708,
		14.395,
		14.080,
		13.764,
		13.448,
		13.132,
		12.818,
		12.507,
		12.198,
		11.893,
		11.592,
		11.297,
		11.007,
		10.724,
		10.448,
		10.180,
		9.920,
		9.668,
		9.425,
		9.192,
		8.968,
		8.755,
		8.552,
		8.360,
		8.178,
		8.007,
		7.847,
		7.698,
		7.560,
		7.433,
		7.317,
		7.212,
		7.117,
		7.032,
		6.957,
		6.893,
		6.837,
		6.791,
		6.753,
		6.723,
		6.701,
		6.687,
		6.678,
		6.677,
		6.680,
		6.689,
		6.702,
		6.719,
		6.739,
		6.761,
		6.786,
		6.812,
		6.838,
		6.864,
		6.890,
		6.914,
		6.937,
		6.957,
		6.974,
		6.988,
		6.999,
		7.005,
		7.006,
		7.003,
		6.995,
		6.981,
		6.962,
		6.937,
		6.907,
		6.872,
		6.832,
		6.787,
		6.738,
		6.685,
		6.629,
		6.571,
		6.511,
		6.451,
		6.393,
		6.336,
		6.284,
		6.237,
		6.197,
		6.167,
		6.149,
		6.145,
		6.159,
		6.192,
		6.248,
		6.330,
		6.443,
		6.590,
		6.774,
		7.001,
		7.275,
		7.602,
		7.985,
		8.432,
		8.948,
		9.540,
		10.213,
		10.975,
		11.833,
		12.796,
		13.870,
		15.065,
		16.389,
		17.852,
		19.464,
		21.235,
		23.175,
		25.296,
		27.609,
		30.126,
		32.861,
		35.825,
		39.034,
		42.500,
		46.239,
		50.267,
		54.598,
		59.250,
		64.239,
		69.584,
		75.303,
		81.415,
		87.939,
		94.897,
		102.308,
		110.195,
		118.581,
		127.488
};

#endif /* SERVICE_SOC_EKF_MODEL_H_ */
#endif
